# Урок 4. Данные, функции и модули в Python (продолжение)
# ----------------------------------------------------------------------------------------------------
# 1. Задайте строку из набора чисел. Напишите программу, которая покажет большее и меньшее число.
# В качестве символа-разделителя используйте пробел.
# --------------------------------------------------------------------------------------------------
# outstr = input('Введите строку чисел через пробел: ').split(' ')
# numbers = []
# for i in range(len(outstr)):
#     numbers.append(int(outstr[i]))
# print('Исходный массив: ')
# print(outstr)
# # print('минимальное число = {}; \nмаксимальное число = {}'.format(min(numbers), max(numbers)))
# print(f'минимальное число = {min(numbers)}, максимальное число = {max(numbers)}')
# ---------------------------------------------------------------------------------------------------
# РЕШЕНИЕ 2 через МЕТОД.
# ---------------------------------------------------------------------------------------------------
# def listAdd(outstr):
#     numbers = []
#     for i in range(len(outstr)):
#         numbers.append(int(outstr[i]))
#     return numbers
# outstr = input('Введите строку чисел через пробел: ').split(' ')
# numbers = listAdd(outstr)
# print(numbers)
# print(f'минимальное число = {min(numbers)}, \nмаксимальное число = {max(numbers)}')
# ----------------------------------------------------------------------------------------------------
# РЕШЕНИЕ 3 через МЕТОД.
# ---------------------------------------------------------------------------------------------------
# def listAdd(outstr):
#     numbers = []
#     for item in outstr:
#         numbers.append(int(item))
#     return numbers
# outstr = input('Введите строку чисел через пробел: ').split(' ')
# numbers = listAdd(outstr)
# print(numbers)
# print(f'минимальное число = {min(numbers)}, \nмаксимальное число = {max(numbers)}')
# ---------------------------------------------------------------------------------------------------
# 2. Найдите корни квадратного уравнения Ax² + Bx + C = 0 двумя способами:
# 1) с помощью математических формул нахождения корней квадратного уравнения
# *2) с помощью дополнительных библиотек Python
# ----------------------------------------------------------------------------------------------------
# from dis import disco

# def solution(a, b, c):
#     desc = (b ** 2)- (4 * a * c)
#     if desc > 0:
#         desc = desc ** 0.5
#         answer1 = (-b - desc) / (2 * a)
#         answer2 = (-b + desc) / (2 * a)
#         return answer1, answer2
#     elif desc == 0:
#         desc = desc ** 0.5
#         answer = -b / (2 * a)
#         return answer
#     else:
#         print('Решения нет.')

# a = 1   # 1
# b = 10  # 6
# c = 3   # 9
# print(f'Ответ: {solution(a, b, c)}')
# ---------------------------------------------------------------------------------------------------
#  РЕШЕНИЕ 2 короче
# ---------------------------------------------------------------------------------------------------

# def root(a, b, c):
#     disc = b ** 2 - 4 * a * c
#     if disc >= 0:
#         x1 = (-b + (disc ** 0.5)) / (2 * a)
#         x2 = (-b - (disc ** 0.5)) / (2 * a)
#         return x1, x2
#     return None

# a = 1
# b = 6
# c = 9
# print(root(a, b, c))

# ----------------------------------------------------------------------------------------------------
# 3. Задайте два числа. Напишите программу, которая найдёт НОК (наименьшее общее кратное) этих двух чисел.
# Ответ записать в файл.
# ---------------------------------------------------------------------------------------------------
# РЕШЕНИЕ через алгоритм Эфклида
# ----------------------------------------------------------------------------------------------------
# from itertools import count

# a = 13
# b = 2
# count = a * b
# while (a != b):
#     if a > b: 
#         a = a - b
#     else: 
#         b = b - a
# print(count/b)
# ---------------------------------------------------------------------------------------------------
# РЕШЕНИЕ 2 через библиотеку с записью в фаил.
# ---------------------------------------------------------------------------------------------------
# import math
# num_1 = int(input('Введите первое число: '))
# num_2 = int(input('Введите второе число: '))
# print(math.lcm(num_1, num_2))

# with open('file.txt', 'a') as f:
#     f.write(str(math.lcm(num_1, num_2)))
# ---------------------------------------------------------------------------------------------------
# РЕШЕНИЕ 3
# ---------------------------------------------------------------------------------------------------
# def findNOK(a, b):
#     minnum = max(a, b) # МОжно написать min(a, b) - будет больше итераций.

#     while True:
#         if minnum % a == 0 and minnum % b == 0:
#             break
#         minnum += 1
#     print(minnum)

# findNOK(int(input('Введите первое число: ')), int(input('Введите второе число: ')))

# РЕШЕНИЕ 4 (не доделано)
# number1 = int(input('Введите первое число: '))
# number2 = int(input('Введите второе число: '))
# nok = 1
# while nok > 0:
#     if (number1 % 2 == 0) and (number2 % 2 == 0):
#         nok = 2
#         break
#     else:
#         if number1 > number2:
#             nok = number1 - number2
#         else:
#             nok = number2 - number1
#     print(nok)
# ---------------------------------------------------------------------------------------------------

